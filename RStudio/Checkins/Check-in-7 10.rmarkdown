---
title: "Check-in 7"
author: "Maxim Dokukin"
format: 
  html:
    embed-resources: true
    code-tools: true
    code-summary: "Code"
---


Remember, **follow the instructions below and use R Markdown to create a pdf document with your code and answers to the following questions on Gradescope.** You may find a template file by clicking "Code" in the top right corner of this page.

Load the flips data using the following code:


```{r, warning = F, message = F}
library(tidyverse)
flips <- read_csv("https://math167r-s24.github.io/static/flips.csv")
head(flips)

flips_long <- flips |>
  mutate(id = 1:200) |>
  pivot_longer(-id,  names_to = "Sequence", values_to = "Flip")
```


1. Design your own hypothesis test to try to identify the sequence of real flips. Design your own test statistic and simulate the null distribution of your test statistic. Can you identify which sequence is the real one?



------------------------------
Test 1 - Longest Streak
------------------------------

```{r, warning=FALSE, message=FALSE}
long_flip_streaks <- flips_long |>
  group_by(Sequence) |>
  summarize(longest_streak = max(rle(Flip)$length))

long_sim_streaks <- 
  data.frame(
    x = replicate(100000, 
                  max(rle(sample(c("H", "T"), size = 200, replace = T))$length)
    )
  )

ggplot() +
  geom_histogram(data = long_sim_streaks, aes(x = x), binwidth = 1) +
  geom_vline(data = long_flip_streaks,
             aes(color = Sequence, xintercept = longest_streak)) +
  xlab("Longest Streak")

long_p_vals <- sapply(long_flip_streaks$longest_streak,
                 function (x) mean(long_sim_streaks$x < x))
print(long_p_vals)

long_dist_from_center <- abs(long_p_vals - 0.5)
print(paste("Sample closest to simulated distribution:", 
      c('A', 'B', 'C', 'D', 'E')[which.min(long_dist_from_center)]))
```

------------------------------
Test 2 - Average Streak
------------------------------




```{r, warning=FALSE, message=FALSE}
avg_flip_streaks <- flips_long |>
  group_by(Sequence) |>
  summarize(avg_streak = mean(rle(Flip)$length))

avg_sim_streaks <- 
  data.frame(
    x = replicate(100000, 
                  mean(rle(sample(c("H", "T"), size = 200, replace = T))$length)
    )
  )

ggplot() +
  geom_histogram(data = avg_sim_streaks, aes(x = x)) +
  geom_vline(data = avg_flip_streaks,
             aes(color = Sequence, xintercept = avg_streak)) +
  xlab("Average Streak")

avg_p_vals <- sapply(avg_flip_streaks$avg_streak,
                 function (x) mean(avg_sim_streaks$x < x))
print(avg_p_vals)

avg_dist_from_center <- abs(avg_p_vals - 0.5)
print(paste("Sample closest to simulated distribution:", 
      c('A', 'B', 'C', 'D', 'E')[which.min(avg_dist_from_center)]))
```




------------------------------
Test 3 - H/T Transition Count
------------------------------

```{r, warning=FALSE, message=FALSE}
trans_counts <- flips_long |>
  group_by(Sequence) |>
  summarize(transitions = length(rle(Flip)$length))

trans_counts_sim <- 
  data.frame(
    x = replicate(100000, 
                  length(rle(sample(c("H", "T"), size = 200, replace = T))$length)
    )
  )

ggplot() +
  geom_histogram(data = trans_counts_sim, aes(x = x)) +
  geom_vline(data = trans_counts,
             aes(color = Sequence, xintercept = transitions)) +
  xlab("H/T Transitions")

trans_p_vals <- sapply(trans_counts$transitions,
                 function (x) mean(trans_counts_sim$x < x))
print(trans_p_vals)

trans_dist_from_center <- abs(trans_p_vals - 0.5)
print(paste("Sample closest to simulated distribution:", 
      c('A', 'B', 'C', 'D', 'E')[which.min(trans_dist_from_center)]))
```




------------------------------
Distance from center summary
------------------------------

```{r, warning=FALSE, message=FALSE}
total_dist <- long_dist_from_center + avg_dist_from_center + trans_dist_from_center

print(paste("Sample closest to simulated distribution:", 
      c('A', 'B', 'C', 'D', 'E')[which.min(total_dist)]))
```

